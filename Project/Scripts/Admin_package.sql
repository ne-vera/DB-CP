CREATE OR REPLACE PACKAGE ADMIN_PACKAGE IS
-------------------------------------USERS--------------------------------------
PROCEDURE DELETE_USER (I_USER_LOGIN IN USERS.USER_LOGIN%TYPE);

------------------------------------ARTISTS-------------------------------------
PROCEDURE CREATE_ARTIST (I_ARTIST_NAME IN ARTISTS.ARTIST_NAME%TYPE, 
                        I_ARTIST_PHOTO IN ARTISTS.ARTIST_PHOTO%TYPE);
                        
PROCEDURE UPDATE_ARTIST (I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE,
                        I_ARTIST_NAME IN ARTISTS.ARTIST_NAME%TYPE, 
                        I_ARTIST_PHOTO IN ARTISTS.ARTIST_PHOTO%TYPE);
                      
PROCEDURE DELETE_ARTIST (I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE);

------------------------------------ALBUMS--------------------------------------
PROCEDURE CREATE_ALBUM (I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE, 
                        I_ALBUM_NAME IN ALBUMS.ALBUM_NAME%TYPE,
                        I_ALBUM_RELEASE_DATE IN ALBUMS.ALBUM_RELEASE_DATE%TYPE,
                        I_ALBUM_COVER IN ALBUMS.ALBUM_COVER%TYPE);

PROCEDURE UPDATE_ALBUM (I_ALBUM_ID IN ALBUMS.ALBUM_ID%TYPE,
                        I_ALBUM_NAME IN ALBUMS.ALBUM_NAME%TYPE,
                        I_ALBUM_RELEASE_DATE IN ALBUMS.ALBUM_RELEASE_DATE%TYPE,
                        I_ALBUM_COVER IN ALBUMS.ALBUM_COVER%TYPE);
                        
PROCEDURE DELETE_ALBUM (I_ALBUM_ID IN ALBUMS.ALBUM_ID%TYPE);
------------------------------------SONGS---------------------------------------
PROCEDURE CREATE_SONG (I_SONG_NAME IN SONGS.SONG_NAME%TYPE,
                      I_SONG_FILE IN SONGS.SONG_FILE%TYPE,
                      I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE);
                      
PROCEDURE UPDATE_SONG (I_SONG_ID IN SONGS.SONG_ID%TYPE,
                      I_SONG_NAME IN SONGS.SONG_NAME%TYPE,
                      I_SONG_FILE IN SONGS.SONG_FILE%TYPE,
                      I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE);

PROCEDURE DELETE_SONG (I_SONG_ID IN SONGS.SONG_ID%TYPE);

PROCEDURE ADD_SONG_TO_ALBUM (I_SONG_ID IN SONGS.SONG_ID%TYPE,
                            I_ALBUM_ID IN ALBUMS.ALBUM_ID%TYPE);

PROCEDURE DELETE_SONG_FROM_ALBUM (I_SONG_ID IN SONGS.SONG_ID%TYPE,
                                  I_ALBUM_ID IN ALBUMS.ALBUM_ID%TYPE);
END;



CREATE OR REPLACE PACKAGE BODY ADMIN_PACKAGE IS
-------------------------------------USERS--------------------------------------
-------------------------DELETE_USER-------------------------
PROCEDURE DELETE_USER
    (I_USER_LOGIN IN USERS.USER_LOGIN%TYPE)
IS
    CNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO CNT FROM USERS WHERE USERS.USER_LOGIN = I_USER_LOGIN;
    IF (CNT != 0) THEN
        DELETE FROM USERS WHERE USERS.USER_LOGIN = I_USER_LOGIN;
        COMMIT;
    ELSE
        RAISE_APPLICATION_ERROR(-20003, 'User is not found');
    END IF;
END DELETE_USER;

------------------------------------ARTISTS-------------------------------------
-------------------------CREATE_ARTIST-------------------------
PROCEDURE CREATE_ARTIST
  (I_ARTIST_NAME IN ARTISTS.ARTIST_NAME%TYPE, 
  I_ARTIST_PHOTO IN ARTISTS.ARTIST_PHOTO%TYPE)
  IS
  CNT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO CNT FROM ARTISTS WHERE I_ARTIST_NAME = ARTISTS.ARTIST_NAME;
    IF (CNT != 0) THEN
      INSERT INTO ARTISTS (ARTIST_NAME, ARTIST_PHOTO) VALUES (I_ARTIST_NAME, I_ARTIST_PHOTO);
    COMMIT;
    ELSE
        RAISE_APPLICATION_ERROR(-20005, 'Artist with this name already exists');
    END IF;
  END CREATE_ARTIST;
                        
-------------------------UPDATE_ARTIST------------------------
PROCEDURE UPDATE_ARTIST
   (I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE,
    I_ARTIST_NAME IN ARTISTS.ARTIST_NAME%TYPE, 
    I_ARTIST_PHOTO IN ARTISTS.ARTIST_PHOTO%TYPE)
IS
  CNT NUMBER;
BEGIN
  SELECT COUNT(*) INTO CNT FROM ARTISTS WHERE I_ARTIST_ID = ARTISTS.ARTIST_ID;
  IF (CNT != 0) THEN
    UPDATE ARTISTS SET ARTIST_NAME = I_ARTIST_NAME, 
    ARTIST_PHOTO = I_ARTIST_PHOTO
    WHERE ARTIST_ID = I_ARTIST_ID;
    COMMIT;
  ELSE
    RAISE_APPLICATION_ERROR(-20017, 'Artist not found');
  END IF;
END UPDATE_ARTIST;
                      
-------------------------DELETE_ARTIST------------------------
PROCEDURE DELETE_ARTIST
  (I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE)
IS
  CNT NUMBER;
BEGIN
  SELECT COUNT(*) INTO CNT FROM ARTISTS WHERE I_ARTIST_ID = ARTISTS.ARTIST_ID;
  IF (CNT != 0) THEN
    DELETE FROM ARTISTS WHERE ARTIST_ID = I_ARTIST_ID;
    COMMIT;
  ELSE
    RAISE_APPLICATION_ERROR(-20017, 'Artist not found');
  END IF;
END DELETE_ARTIST;

------------------------------------ALBUMS--------------------------------------
-------------------------CREATE_ALBUM-------------------------
PROCEDURE CREATE_ALBUM
  (I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE, 
  I_ALBUM_NAME IN ALBUMS.ALBUM_NAME%TYPE,
  I_ALBUM_RELEASE_DATE IN ALBUMS.ALBUM_RELEASE_DATE%TYPE,
  I_ALBUM_COVER IN ALBUMS.ALBUM_COVER%TYPE)
IS
  CNT NUMBER;
BEGIN
  SELECT COUNT(*) INTO CNT FROM ARTIST_ALBUM_SONG_VIEW
    WHERE ALBUM_NAME = I_ALBUM_NAME AND ARTIST_ID = I_ARTIST_ID;
  IF (CNT = 0) THEN
    INSERT INTO ALBUMS (ALBUM_NAME, ALBUM_RELEASE_DATE, ALBUM_COVER) 
      VALUES (I_ALBUM_NAME, I_ALBUM_RELEASE_DATE, I_ALBUM_COVER);
      COMMIT;
  ELSE
    RAISE_APPLICATION_ERROR(-20006, 'This artist already has this album');
  END IF;
END CREATE_ALBUM;

-------------------------UPDATE_ALBUM------------------------
PROCEDURE UPDATE_ALBUM
  (I_ALBUM_ID IN ALBUMS.ALBUM_ID%TYPE,
  I_ALBUM_NAME IN ALBUMS.ALBUM_NAME%TYPE,
  I_ALBUM_RELEASE_DATE IN ALBUMS.ALBUM_RELEASE_DATE%TYPE,
  I_ALBUM_COVER IN ALBUMS.ALBUM_COVER%TYPE)
IS
  CNT NUMBER;
BEGIN
   SELECT COUNT(*) INTO CNT FROM ALBUMS WHERE ALBUM_ID = I_ALBUM_ID;
   IF (CNT != 0) THEN
    UPDATE ALBUMS SET ALBUM_NAME = I_ALBUM_NAME,
      ALBUM_RELEASE_DATE = I_ALBUM_RELEASE_DATE,
      ALBUM_COVER = I_ALBUM_COVER
    WHERE ALBUM_ID = I_ALBUM_ID;
    COMMIT;
  ELSE
    RAISE_APPLICATION_ERROR(-20018, 'Album not found');
  END IF;
END UPDATE_ALBUM;
                        
-------------------------DELETE_ALBUM------------------------
PROCEDURE DELETE_ALBUM
  (I_ALBUM_ID IN ALBUMS.ALBUM_ID%TYPE)
IS
  CNT NUMBER;
BEGIN
  SELECT COUNT(*) INTO CNT FROM ALBUMS WHERE ALBUM_ID = I_ALBUM_ID;
  IF (CNT != 0) THEN
    DELETE FROM ALBUMS WHERE  ALBUM_ID = I_ALBUM_ID;
    COMMIT;
  ELSE
    RAISE_APPLICATION_ERROR(-20018, 'Album not found');
  END IF;
END DELETE_ALBUM;
------------------------------------SONGS---------------------------------------
-------------------------CREATE_SONG-------------------------
PROCEDURE CREATE_SONG 
  (I_SONG_NAME IN SONGS.SONG_NAME%TYPE,
  I_SONG_FILE IN SONGS.SONG_FILE%TYPE,
  I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE)
  IS
  CNT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO CNT FROM ARTIST_ALBUM_SONG_VIEW
      WHERE I_SONG_NAME = SONG_NAME AND ARTIST_ID = I_ARTIST_ID;
    IF (CNT = 0) THEN
      INSERT INTO SONGS (SONG_NAME, SONG_FILE, ARTIST_ID) VALUES (I_SONG_NAME, I_SONG_FILE, I_ARTIST_ID);
      COMMIT;
    ELSE
      RAISE_APPLICATION_ERROR(-20007, 'This artist already has this song');
    END IF;
  END CREATE_SONG;
                      
-------------------------UPDATE_SONG-------------------------
PROCEDURE UPDATE_SONG 
  (I_SONG_ID IN SONGS.SONG_ID%TYPE,
  I_SONG_NAME IN SONGS.SONG_NAME%TYPE,
  I_SONG_FILE IN SONGS.SONG_FILE%TYPE,
  I_ARTIST_ID IN ARTISTS.ARTIST_ID%TYPE)
  IS
  CNT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO CNT FROM SONGS
      WHERE I_SONG_ID = SONG_ID;
      IF (CNT != 0) THEN
        UPDATE SONGS SET SONG_NAME = I_SONG_NAME,
        SONG_FILE = I_SONG_FILE,
        ARTIST_ID = I_ARTIST_ID
        WHERE I_SONG_ID = SONG_ID;
        COMMIT;
    ELSE
       RAISE_APPLICATION_ERROR(-20019, 'Song not found');
    END IF;
  END UPDATE_SONG;

-------------------------DELETE_SONG-------------------------
PROCEDURE DELETE_SONG 
  (I_SONG_ID IN SONGS.SONG_ID%TYPE)
  IS
  CNT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO CNT FROM SONGS
      WHERE I_SONG_ID = SONG_ID;
      IF (CNT != 0) THEN
        DELETE FROM SONGS WHERE SONG_ID = I_SONG_ID;
        COMMIT;
    ELSE
       RAISE_APPLICATION_ERROR(-20019, 'Song not found');
    END IF;
  END DELETE_SONG;

-------------------------ADD_SONG_TO_ALBUM-------------------------
PROCEDURE ADD_SONG_TO_ALBUM
  (I_SONG_ID IN SONGS.SONG_ID%TYPE,
  I_ALBUM_ID IN ALBUMS.ALBUM_ID%TYPE)
  IS
  CNT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO CNT FROM ALBUM_SONG 
      WHERE ALBUM_ID = I_ALBUM_ID AND SONG_ID = I_SONG_ID;
     IF (CNT = 0) THEN
      INSERT INTO ALBUM_SONG(ALBUM_ID, SONG_ID) VALUES (I_ALBUM_ID, I_SONG_ID);
      COMMIT;
    ELSE
      RAISE_APPLICATION_ERROR(-20008, 'This album already has this song');
    END IF;
END ADD_SONG_TO_ALBUM;

-------------------------DELETE_SONG_FROM_ALBUM-------------------------
PROCEDURE DELETE_SONG_FROM_ALBUM
  (I_SONG_ID IN SONGS.SONG_ID%TYPE,
  I_ALBUM_ID IN ALBUMS.ALBUM_ID%TYPE)
  IS
  CNT NUMBER;
  BEGIN
    SELECT COUNT(*) INTO CNT FROM ALBUM_SONG 
      WHERE ALBUM_ID = I_ALBUM_ID AND SONG_ID = I_SONG_ID;
     IF (CNT > 0) THEN
      DELETE FROM ALBUM_SONG WHERE ALBUM_ID = I_ALBUM_ID AND SONG_ID = I_SONG_ID;
      COMMIT;
    ELSE
      RAISE_APPLICATION_ERROR(-20009, 'This album does not have this song');
    END IF;
END DELETE_SONG_FROM_ALBUM;
END;